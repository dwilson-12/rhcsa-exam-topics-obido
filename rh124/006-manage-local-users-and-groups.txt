User Account Management

Commands

* useradd
* groupadd
* userdel
* groupdel
* usermod
* newusers

Files

* /etc/passwd
* /etc/group
* /etc/shadow

Example:

$ useradd -g superheroes -s /bin/bash -c "user description" -m -d /home/ironman ironman

Sample commands

$ useradd username		 = create a user
$ id username			 = verify if you successfully created a user
$ passwd username		 = create password for the user
$ groupadd groupname		 = create group
$ usermod			 = modify usesr account
$ usermod -G groupname username	 = add user to the group.. verify .. grep username /etc/group
$ chgrp -R groupname userhomedir = change the group of the user home directory
$ userdel -r username		 = delete user as well as it's home directory
$ groupdel groupname 		 = delete group
$ cat /etc/group		 = verify group
$ cat /etc/passwd		 = user's information
$ cat /etc/shadow		 = passwords user's information but encrypted
$ grep username /etc/passwd	 = show's specific user's information

* Create multiple accounts using newusers command
	* Create the file first and the content will be like this:
	user-list.txt
	
	2gadmin:2gadmin123:1003:1003::/home/2gadmin:/bin/bash
	testuser:testuser123:1004:1004::/home/testuser:/bin/bash
	demouser:demouser123:1005:1005::/home/demouser:/bin/bash

	# newusers <filename.txt>

Enable Password Aging

The /etc/login.defs file
* If you want apply password aging throughout the system you can do it by modifying this login.defs file

* File = /etc/login.defs
	* PASS_MAX_DAYS	99999
	* PASS_MIN_DAYS	0
	* PASS_MIN_LEN	5
	* PASS_WARN_AGE	7

	-d = 3. Last password change (lastchange): Days since Jan 1, 1970 that password was last changed
	-m = 4. Minimum: The number of days required between password changes i.e. the number of days left before the user is allowed to change his/her password
	-M = 5. Maximum: The number of days the password is valid (after that user is forced to change his/her password)
	-W = 6. Warn: The number of days before password is to expire that user is warned that his/her password must be changed
	-I = 7. Inactive: The number of days after password expires that account is disabled
	-E = 8. Expire: days since Jan 1, 1970 that account is disabled i.e. an absolute date specifying when the login many no longer be used

* The chage command -per user
	Example:
	$ chage -m mindays -M maxdays -d lastday -I inactive -E expiredate -W warndays user
	$ chage -m 5 -M 90 -W 10 -I 3 <username>
	$ grep <username> /etc/shadow

The chage Command
Set parameters around the password

Switch Users and Sudo Access

* Sudo commands allows the ordinary user to run root level commands

Commands

$ su - username	= switch user
$ su -		= switch to root user
$ sudo command	= is a command that allows users to run commands with privileges that only root user have
$ visudo	= it's config file to allow had or remove the rights certain commands

* after visudo command look for %wheel keyword and look root on the top of it
root	ALL=(ALL)	ALL
user	ALL=(ALL)	ALL

OR..

$ usermod -aG wheel [username]

# verify

$ grep wheel /etc/group

File
* /etc/sudoers